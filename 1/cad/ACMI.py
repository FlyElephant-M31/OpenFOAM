# -*- coding: utf-8 -*-

###
### This file is generated automatically by SALOME v7.7.1 with dump python functionality
###

import sys
import salome

salome.salome_init()
theStudy = salome.myStudy

import salome_notebook
notebook = salome_notebook.NoteBook(theStudy)
sys.path.insert( 0, r'/home/shor-ty/Schreibtisch/ACMI/cad')

###
### GEOM component
###

import GEOM
from salome.geom import geomBuilder
import math
import SALOMEDS


geompy = geomBuilder.New(theStudy)

O = geompy.MakeVertex(0, 0, 0)
OX = geompy.MakeVectorDXDYDZ(1, 0, 0)
OY = geompy.MakeVectorDXDYDZ(0, 1, 0)
OZ = geompy.MakeVectorDXDYDZ(0, 0, 1)
ACMIGeometry_step_1 = geompy.ImportSTEP("/home/shor-ty/Schreibtisch/ACMI/cad/ACMIGeometry.step")
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["VERTEX"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
listSubShapeIDs = geompy.SubShapeAllIDs(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
front = geompy.CreateGroup(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(front, [383, 334, 369, 173, 196, 125, 251, 277, 347, 205, 132, 351, 85, 151, 33, 260, 53, 13, 90, 290, 189])
back = geompy.CreateGroup(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(back, [67, 176, 388, 395, 25, 212, 297, 404, 107, 313, 306, 231, 45, 146, 408, 159, 222, 399, 139, 95, 320])
inlet = geompy.CreateGroup(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(inlet, [3])
outlet = geompy.CreateGroup(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(outlet, [432])
walls = geompy.CreateGroup(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(walls, [366, 287, 376, 179, 100, 241, 81, 238, 437, 327, 274, 330, 358, 413, 428, 344, 284, 60, 363, 270, 419, 416, 219, 373, 267, 40, 20, 430, 186, 341, 421, 244, 122, 74, 119, 112, 30])
interface = geompy.CreateGroup(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(interface, [156, 434, 166, 425])
BG = geompy.MakeBoundingBox(ACMIGeometry_step_1, True)
geomObj_1 = geompy.MakeCDG(ACMIGeometry_step_1)
CoM = geompy.MakeCDG(ACMIGeometry_step_1)
BGNew = geompy.MakeScaleAlongAxes(BG, CoM, 1.2, 1.2, 3)
innerRing = geompy.CreateGroup(ACMIGeometry_step_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(innerRing, [13, 25, 3, 20, 30])
connectedEdge = geompy.CreateGroup(ACMIGeometry_step_1, geompy.ShapeType["EDGE"])
geompy.UnionIDs(connectedEdge, [17])
interface_1 = geompy.MakePrismVecH(connectedEdge, OZ, -0.005)
geompy.DifferenceIDs(walls, [366, 287, 376, 179, 100, 241, 81, 238, 437, 327, 274, 330, 358, 413, 428, 344, 284, 60, 363, 270, 419, 416, 219, 373, 267, 40, 20, 430, 186, 341, 421, 244, 122, 74, 119, 112, 30])
geompy.UnionIDs(walls, [366, 287, 376, 179, 100, 241, 81, 238, 437, 327, 274, 330, 358, 413, 428, 344, 284, 60, 363, 270, 419, 416, 219, 373, 267, 40, 20, 430, 186, 341, 421, 244, 122, 74, 119, 112, 30, 50])
geompy.addToStudy( O, 'O' )
geompy.addToStudy( OX, 'OX' )
geompy.addToStudy( OY, 'OY' )
geompy.addToStudy( OZ, 'OZ' )
geompy.addToStudy( ACMIGeometry_step_1, 'ACMIGeometry.step_1' )
geompy.addToStudyInFather( ACMIGeometry_step_1, front, 'front' )
geompy.addToStudyInFather( ACMIGeometry_step_1, back, 'back' )
geompy.addToStudyInFather( ACMIGeometry_step_1, inlet, 'inlet' )
geompy.addToStudyInFather( ACMIGeometry_step_1, outlet, 'outlet' )
geompy.addToStudyInFather( ACMIGeometry_step_1, walls, 'walls' )
geompy.addToStudyInFather( ACMIGeometry_step_1, interface, 'interface' )
geompy.addToStudy( BG, 'BG' )
geompy.addToStudy( CoM, 'CoM' )
geompy.addToStudy( BGNew, 'BGNew' )
geompy.addToStudyInFather( ACMIGeometry_step_1, innerRing, 'innerRing' )
geompy.addToStudyInFather( ACMIGeometry_step_1, connectedEdge, 'connectedEdge' )
geompy.addToStudy( interface_1, 'interface' )

###
### SMESH component
###

import  SMESH, SALOMEDS
from salome.smesh import smeshBuilder

smesh = smeshBuilder.New(theStudy)
background = smesh.Mesh(BGNew)
Regular_1D = background.Segment()
Local_Length_1 = Regular_1D.LocalLength(0.005,None,1e-07)
Quadrangle_2D = background.Quadrangle(algo=smeshBuilder.QUADRANGLE)
Hexa_3D = background.Hexahedron(algo=smeshBuilder.Hexa)
isDone = background.Compute()
front_1 = smesh.Mesh(front)
Regular_1D_1 = front_1.Segment()
Local_Length_2 = Regular_1D_1.LocalLength(0.002,None,1e-07)
MEFISTO_2D = front_1.Triangle(algo=smeshBuilder.MEFISTO)
isDone = front_1.Compute()
back_1 = smesh.Mesh(back)
status = back_1.AddHypothesis(Local_Length_2)
Regular_1D_2 = back_1.Segment()
MEFISTO_2D_1 = back_1.Triangle(algo=smeshBuilder.MEFISTO)
isDone = back_1.Compute()
inlet_1 = smesh.Mesh(inlet)
status = inlet_1.AddHypothesis(Local_Length_2)
Regular_1D_3 = inlet_1.Segment()
MEFISTO_2D_2 = inlet_1.Triangle(algo=smeshBuilder.MEFISTO)
isDone = inlet_1.Compute()
outlet_1 = smesh.Mesh(outlet)
status = outlet_1.AddHypothesis(Local_Length_2)
Regular_1D_4 = outlet_1.Segment()
MEFISTO_2D_3 = outlet_1.Triangle(algo=smeshBuilder.MEFISTO)
isDone = outlet_1.Compute()
walls_1 = smesh.Mesh(walls)
status = walls_1.AddHypothesis(Local_Length_2)
Regular_1D_5 = walls_1.Segment()
MEFISTO_2D_4 = walls_1.Triangle(algo=smeshBuilder.MEFISTO)
interface_2 = smesh.Mesh(interface)
status = interface_2.AddHypothesis(Local_Length_2)
Regular_1D_6 = interface_2.Segment()
MEFISTO_2D_5 = interface_2.Triangle(algo=smeshBuilder.MEFISTO)
isDone = interface_2.Compute()
try:
  front_1.ExportSTL( r'/home/shor-ty/Schreibtisch/ACMI/cad/stl/front.stl', 1 )
except:
  print 'ExportSTL() failed. Invalid file name?'
try:
  back_1.ExportSTL( r'/home/shor-ty/Schreibtisch/ACMI/cad/stl/back.stl', 1 )
except:
  print 'ExportSTL() failed. Invalid file name?'
try:
  inlet_1.ExportSTL( r'/home/shor-ty/Schreibtisch/ACMI/cad/stl/inlet.stl', 1 )
except:
  print 'ExportSTL() failed. Invalid file name?'
try:
  outlet_1.ExportSTL( r'/home/shor-ty/Schreibtisch/ACMI/cad/stl/outlet.stl', 1 )
except:
  print 'ExportSTL() failed. Invalid file name?'
try:
  walls_1.ExportSTL( r'/home/shor-ty/Schreibtisch/ACMI/cad/stl/walls.stl', 1 )
except:
  print 'ExportSTL() failed. Invalid file name?'
try:
  interface_2.ExportSTL( r'/home/shor-ty/Schreibtisch/ACMI/cad/stl/interface.stl', 1 )
except:
  print 'ExportSTL() failed. Invalid file name?'
interfaceSHM = smesh.Mesh(interface_1)
status = interfaceSHM.AddHypothesis(Local_Length_2)
Regular_1D_7 = interfaceSHM.Segment()
MEFISTO_2D_6 = interfaceSHM.Triangle(algo=smeshBuilder.MEFISTO)
isDone = interfaceSHM.Compute()
try:
  interfaceSHM.ExportSTL( r'/home/shor-ty/Schreibtisch/ACMI/constant/triSurface/interface.stl', 1 )
except:
  print 'ExportSTL() failed. Invalid file name?'
isDone = walls_1.Compute()
try:
  walls_1.ExportSTL( r'/home/shor-ty/Schreibtisch/ACMI/cad/stl/walls.stl', 1 )
except:
  print 'ExportSTL() failed. Invalid file name?'


## Set names of Mesh objects
smesh.SetName(Regular_1D.GetAlgorithm(), 'Regular_1D')
smesh.SetName(Hexa_3D.GetAlgorithm(), 'Hexa_3D')
smesh.SetName(Quadrangle_2D.GetAlgorithm(), 'Quadrangle_2D')
smesh.SetName(Local_Length_2, 'Local Length_2')
smesh.SetName(MEFISTO_2D.GetAlgorithm(), 'MEFISTO_2D')
smesh.SetName(Local_Length_1, 'Local Length_1')
smesh.SetName(interface_2.GetMesh(), 'interface')
smesh.SetName(walls_1.GetMesh(), 'walls')
smesh.SetName(background.GetMesh(), 'background')
smesh.SetName(back_1.GetMesh(), 'back')
smesh.SetName(front_1.GetMesh(), 'front')
smesh.SetName(outlet_1.GetMesh(), 'outlet')
smesh.SetName(inlet_1.GetMesh(), 'inlet')
smesh.SetName(interfaceSHM.GetMesh(), 'interfaceSHM')


if salome.sg.hasDesktop():
  salome.sg.updateObjBrowser(1)
